import withAuth from "components/withAuth"
import { useRouter } from "next/router"
import { useState } from "react"
import fetcher from "utils/fetcher"
import { Button, TextField } from "@material-ui/core"
import Navbar from "components/Navbar"
import { getBBGitConnection } from "pages/api/courses/[term]/[courseId]/git/createConnection"


const AddGitPat = ({ gitURL }) => {
  const router = useRouter()
  const { term, courseId } = router.query
  const [pat, setPat] = useState("")
  const [loading, setLoading] = useState(false)


  const handleChangePat = event => {
    setPat(event.target.value)
  }

  const addPath = async () => {
    setLoading(true)
    const data = await fetcher(
      `/api/courses/${term}/${courseId}/git/addPAT`,
      {
        pat: pat,
      }
    )
    setLoading(false)

    if (data.courseId) {
      router.push(`/courses/${term}/${courseId}`)
    }

    if (data.error) {
      console.log(data.error)
      router.push(`/courses/${term}/${courseId}`)
    }
  }


  return (
    <>
      <Navbar pageTitle={"Create connection to Git repo"} courseId={courseId} term={term} />
      <p>For this application to function, a personal access token (PAT) needs to be generated in your GitLab account. </p>
      <p>When creating your PAT, please make sure to check all available scopes. The expire date can be left blank.</p>
      <p>The PAT can be generated by visiting <a href={`${gitURL || "https://gitlab.stud.idi.ntnu.no"}/-/profile/personal_access_tokens`} >
        the GitLab web site on Personal Access Token that can be found under user settings
      </a>
      </p>
      <TextField
        variant="outlined"
        color="primary"
        id="pat"
        label="pat"
        value={pat}
        onChange={handleChangePat}
      />
      <Button
        variant="contained"
        color="primary"
        onClick={addPath}
        disabled={pat === "" || loading}
      >
              Add Git PAT
      </Button>
    </>
  )
}

export const getServerSideProps = (async (context) => {
  const params = context.params

  const bbGitConnection = await getBBGitConnection(context.req, params)

  if (!bbGitConnection.gitURL) {
    return {
      redirect: {
        destination: `/courses/${params.term}/${params.courseId}/git/create`,
        permanent: false,
      },
    }
  }

  return {
    props: { gitURL: bbGitConnection.gitURL },
  }
})

export default withAuth(AddGitPat)